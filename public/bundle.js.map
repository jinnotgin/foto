{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal.mjs","../node_modules/svelte/store.mjs","../src/stores.js","../src/config.js","../src/jinFunctions.js","../src/PhotoBackground.svelte","../src/Clock.svelte","../src/PhotoSlogan.svelte","../src/WeatherWidget.svelte","../src/BottomBar.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? requestAnimationFrame : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, start: start_time = now() + delay, end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        const b = node.getBoundingClientRect();\n        if (a.left !== b.left || a.top !== b.top) {\n            const style = getComputedStyle(node);\n            const transform = style.transform === 'none' ? '' : style.transform;\n            node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n        }\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction on_outro(callback) {\n    outros.callbacks.push(callback);\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (typeof config === 'function') {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (typeof config === 'function') {\n        wait().then(() => {\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (typeof config === 'function') {\n                wait().then(() => {\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        on_outro(() => {\n                            block.d(1);\n                            info.blocks[i] = null;\n                        });\n                        block.o(1);\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            if (block.i)\n                block.i(1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    on_outro(() => {\n        destroy_block(block, lookup);\n    });\n    block.o(1);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        if (block.i)\n            block.i(1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy(component, detaching) {\n    if (component.$$) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            $$.fragment.c();\n        }\n        if (options.intro && component.$$.fragment.i)\n            component.$$.fragment.i();\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy(this, true);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy(this, true);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, now, raf, set_now, set_raf, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","import { noop, safe_not_equal, run_all, is_function } from './internal';\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (!stop) {\n                return; // not ready\n            }\n            subscribers.forEach((s) => s[1]());\n            subscribers.forEach((s) => s[0](value));\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get(store) {\n    let value;\n    store.subscribe((_) => value = _)();\n    return value;\n}\n\nexport { readable, writable, derived, get };\n","import { writable } from 'svelte/store';\r\n\r\n//export const photos = writable([]);\r\nexport const userProfile = writable({});\r\n\r\nexport const currentPhoto = writable({});\r\n","export const config = {\r\n    'API_KEY': 'AIzaSyCAr4_7aSMmQ4kLnR5cbqnCYbLdPPtw2Hw',\r\n    'CLIENT_ID': '273033434753-laf0qm75cehad2f7p7uuv8ppnvq6753a.apps.googleusercontent.com',\r\n    'OPENWEATHERMAP_API_KEY': '410463b3935acea56c8171825dbb4440',\r\n};","// jFetch\r\n// adds handling of response errors to fetch\r\nexport async function jFetch(url) {\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    return await fetch(url)\r\n        .then(handleErrors)\r\n        .then(response => { console.log('jFetch success:', {url, response}); return response.json(); } )\r\n        .catch(error => {console.error('jFetch error:', {url, error}); return error; })\r\n    ;\r\n}\r\n\r\n// timeout scheduler\r\nconst timeouts = {};\r\nconst timeoutHandler = (desiredItem, desiredCommand, desiredCommandParameter) => {\r\n    //console.log('timeoutHandler:', {desiredItem, desiredCommand, desiredCommandParameter});\r\n    const commands = {\r\n        'schedule': () => {\r\n            clearInterval(timeouts[desiredItem]);\r\n            timeouts[desiredItem] = setTimeout(desiredCommandParameter.function, desiredCommandParameter.timeout);\r\n        },\r\n    }\r\n    \r\n    // create new timeout item if necessary\r\n    if (Object.keys(timeouts).includes(desiredItem) === false) timeouts[desiredItem] = false;\r\n\r\n    // run command\r\n    commands[desiredCommand]();\r\n}\r\n\r\n// schedule a function\r\n// works with timeoutHandler \r\nexport const scheduleFunction = (functionName, functionObj, scheduleSeconds) => {\r\n    console.log('scheduleFunction:', {functionName, scheduleSeconds});\r\n    timeoutHandler(functionName, 'schedule', {\r\n        'function': functionObj,\r\n        'timeout': scheduleSeconds * 1000,\r\n    });\r\n}\r\n\r\n// time string formatter\r\nexport const timeStringFormatter = (timeObj) => {\r\n    let hoursFormatted = timeObj.getHours();\r\n    if (hoursFormatted === 0) hoursFormatted = 12;\r\n    else if (hoursFormatted > 12) hoursFormatted = hoursFormatted - 12;\r\n\r\n    let minutesFormatted = timeObj.getMinutes().toString().padStart(2, '0');\r\n\r\n    return `${hoursFormatted}:${minutesFormatted}`;\r\n}\r\n\r\n// datestring forammter\r\nexport const dateStringFormatter = (timeObj, outputFormat) => {\r\n\r\n    const dateStrings = timeObj.toDateString().split(' ');\r\n\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const days_short = days.map( item => item.substr(0,3));\r\n\r\n    const day = days[days_short.indexOf(dateStrings[0])];\r\n    const month = dateStrings[1];\r\n    const date =  parseInt(dateStrings[2]);\r\n    const year = dateStrings[3];\r\n\r\n    let output = '';\r\n    if (outputFormat === 'dayMonth') output = `${day}, ${month} ${date}`;\r\n    else output = `${date} ${month} ${year}`;\r\n    return output;\r\n}","<script>\n\timport { fade } from 'svelte/transition';\n\timport { config } from  './config.js';\n\timport { scheduleFunction } from  './jinFunctions.js';\n\timport { userProfile, currentPhoto } from './stores';\n\n\tconst SLIDESHOW_INTERVAL = 30;\n\tconst GETNEWPHOTOS_INTERVAL = 60;\n\n\texport let db;\n\tconsole.log({db});\n\n\tfunction authenticate() {\n\t\tconst authInstance = gapi.auth2.getAuthInstance();\n\n\t\tif (authInstance.isSignedIn.get()) {\n\t\t\tconsole.log(\"User already signed in.\");\n\t\t} else {\n\t\t\t//authInstance.signIn({scope: \"https://www.googleapis.com/auth/photoslibrary https://www.googleapis.com/auth/photoslibrary.readonly https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\"})\n\t\t\tauthInstance.signIn({scope: \"https://www.googleapis.com/auth/photoslibrary.readonly\"})\n\t\t\t.then(function() { console.log(\"Sign-in successful\"); },\n\t\t\t\tfunction(err) { console.error(\"Error signing in\", err); });\n\t\t}\n\t\treturn authInstance;\n\t}\n\n\tconst getUserProfile = () => {\n\t\tconst authInstance = gapi.auth2.getAuthInstance();\n\t\tif (authInstance.isSignedIn.get()) {\n\t\t\tvar profile = authInstance.currentUser.get().getBasicProfile();\n\n\t\t\tuserProfile.set({\n\t\t\t\t'name': profile.getName(),\n\t\t\t\t'image': profile.getImageUrl(),\n\t\t\t});\n\t\t\t/*\n\t\t\tconsole.log('Full Name: ' + profile.getName());\n\t\t\tconsole.log('Given Name: ' + profile.getGivenName());\n\t\t\tconsole.log('Family Name: ' + profile.getFamilyName());\n\t\t\tconsole.log('Image URL: ' + profile.getImageUrl());\n\t\t\tconsole.log('ID: ' + profile.getId());\n\t\t\tconsole.log('Email: ' + profile.getEmail());\n\t\t\t*/\n\t\t}\n\t}\n\n\tlet googlePhotosClientLoaded = false;\n\tfunction loadClient() {\n\t\t// get user profile first\n\t\tgetUserProfile();\n\n\t\tgapi.client.setApiKey(config.API_KEY);\n\t\treturn gapi.client.load(\"https://content.googleapis.com/discovery/v1/apis/photoslibrary/v1/rest\")\n\t\t\t.then(function() { \n\t\t\t\tgooglePhotosClientLoaded = true; \n\t\t\t\tconsole.log(\"GAPI client loaded, starting up photos functionality...\"); \n\t\t\t\t\n\t\t\t\tclearOldPhotos();\n\t \t\t\tschedule_displayRandomPhoto(0);\n\t\t\t\tschedule_getPictures(0);\n\t\t\t},\n\t\t\t\tfunction(err) { console.error(\"Error loading GAPI client for API\", err); });\n\t}\n\n\t// change background image\n\tfunction changeBackgroundImage(imgUrl) {\n\t\tconst img = new Image();\n\n\t\timg.onload = function() {\n\t\t\tdocument.querySelector('html').style.backgroundImage = `url(${img.src})`;\n\t\t};\n\n\t\timg.src = imgUrl;\n\t}\n\n\n\tasync function clearOldPhotos() {\n\t\tconst newlyUpdatedPhotos = await db.photos.orderBy('modified').reverse().limit(100).toArray();\n\t\tconst averageModifiedTime = newlyUpdatedPhotos.reduce((accumulator, item) => accumulator + item.modified, 0) / newlyUpdatedPhotos.length\n\t\tconst inactiveTolerance = 60 * 60 * 24 * 7;\n\t\tconsole.log('clearOldPhotos:', {newlyUpdatedPhotos, averageModifiedTime, inactiveTolerance});\n\n\t\tconst thresholdTime = averageModifiedTime - inactiveTolerance;\n\t\tconst deleteTransaction = await db.photos.where('modified').below(thresholdTime).delete();\n\t\tconsole.log('clearOldPhotos:', {deleteTransaction});\n\t};\t\n\n\tconst schedule_displayRandomPhoto = (scheduleSeconds = SLIDESHOW_INTERVAL) => scheduleFunction('displayRandomPhoto', displayRandomPhoto, scheduleSeconds);\n\tasync function displayRandomPhoto() {\n\t\tconst totalNoOfPhotos = await db.photos.count();\n\t\tconst randomPhotoIndex = Math.round(Math.random() * totalNoOfPhotos);\n\t\tconst randomPhotoItem = await db.photos.offset(randomPhotoIndex).limit(1).first();\n\t\tconst randomPhotoId = randomPhotoItem.id;\n\t\tconsole.log('displayRandomPhoto:', {totalNoOfPhotos, randomPhotoIndex, randomPhotoItem, randomPhotoId});\n\n\t\treturn gapi.client.photoslibrary.mediaItems.get({\n      \t\t\"mediaItemId\": randomPhotoId,\n    \t})\n        .then(\n\t\t\tfunction(response) {\n\t\t\t\t// Handle the results here (response.result has the parsed body).\n\t\t\t\tconsole.log(\"Photo data (Google):\", response);\n\t\t\t\tcurrentPhoto.set(response.result);\n\t\t\t\t\n\t\t\t\tchangeBackgroundImage(`${$currentPhoto.baseUrl}=w0-h0`);\n\t\t\t\tschedule_displayRandomPhoto();\n\t\t\t},\n\t\t\tfunction(err) {\n\t\t\t\tconsole.error(\"Execute error\", err); \n\t\t\t\tschedule_displayRandomPhoto(0);\n\t\t\t}\n\t\t);\n\t }\n\n\n\tlet pageToken = '';\n\tconst schedule_getPictures = (scheduleSeconds = GETNEWPHOTOS_INTERVAL) => scheduleFunction('getPictures', getPictures, scheduleSeconds);\n\t// Make sure the client is loaded and sign-in is complete before calling this method.\n\tfunction getPictures() {\n\t\treturn gapi.client.photoslibrary.mediaItems.search({\n\t\t\t\"resource\": {\n\t\t\t\t\"pageSize\": 100,\n\t\t\t\tpageToken\n\t\t\t},\n\t\t}).then(async function(response) {\n\t\t\t// Handle the results here (response.result has the parsed body).\n\t\t\tconsole.log(\"getPictures: \", response);\n\t\t\tconst { result } = response;\n\n\t\t\tconst newPhotoIds = result.mediaItems.filter(item => {\n\t\t\t\tconst validPhotoTest = [\n\t\t\t\t\titem.mimeType.includes('image/'),\n\t\t\t\t\t(item.filename.toLowerCase().includes(\"screenshot\") === false),\n\t\t\t\t\t// check if metadata exists (disabled for now)\n\t\t\t\t\t// (Object.keys(item.mediaMetadata.photo).length > 0),\n\t\t\t\t];\n\n\t\t\t\treturn validPhotoTest.every(item => item === true);\n\t\t\t}).map(item => item.id);\n\n\t\t\tconst nowTime = Math.round((new Date).getTime() / 1000);\n\t\t\tawait db.photos.bulkPut(newPhotoIds.map(item => { \n\t\t\t\treturn {'id': item, 'modified': nowTime};\n\t\t\t})).catch((err) => {\n\t\t\t\tconsole.error(\"Dexie error\", err); \n\t\t\t});;\n\n\t\t\tpageToken = result.nextPageToken;\n\t\t\tschedule_getPictures();\n\t\t}, function(err) { \n\t\t\tconsole.error(\"Execute error\", err); \n\t\t\tschedule_getPictures();\n\t\t});\n\t}\n\n\tgapi.load(\"client:auth2\", function() {\n\t\tgapi.auth2.init({client_id: config.CLIENT_ID}).then( () => {\n\t\t\tconst authInstance = gapi.auth2.getAuthInstance();\n\t\t\tif (authInstance.isSignedIn.get()) {\n\t\t\t\tconsole.log(\"User already signed in.\");\n\t\t\t\tloadClient();\n\t\t\t}\n\t\t});\n\t});\n</script>\n\n<style>\n\tdiv.content {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n\n<div class=\"content\" on:click={() => schedule_displayRandomPhoto(0)} on:dblclick={()=>document.body.requestFullscreen()} on:taphold={()=>document.body.requestFullscreen()}>\n{#if googlePhotosClientLoaded}\n\t<!-- <button on:click={getPictures}>execute</button> -->\n{:else}\n\t<h1>You are not authenticated.</h1>\n\t<button on:click={() => authenticate().then(loadClient)}>authorize and load</button>\n\n{/if}\n</div>","<script>\r\n    export let timeString = \"0:00\";\r\n</script>\r\n\r\n<style>\r\ndiv {\r\n    font-size: 6rem;\r\n    line-height: 1em;\r\n    margin-left: 2rem;\r\n    text-shadow: 1px 1px 6px black;\r\n}\r\n</style>\r\n\r\n<div>\r\n    {timeString}\r\n</div>","<script>\r\n\timport { userProfile, currentPhoto } from './stores';\r\n    import { dateStringFormatter } from  './jinFunctions.js';\r\n    export let photoSlogan = \"\";\r\n\r\n    let photoDate = \"\";\r\n    const getPhotoDate = timeString => dateStringFormatter(new Date(timeString));\r\n</script>\r\n\r\n<style>\r\ndiv {\r\n    margin-left: auto;\r\n    font-size: 1.25rem;\r\n    line-height: 1em;\r\n    margin-right: 2rem;\r\n    text-shadow: 1px 1px 2px black;\r\n    text-align: right;\r\n}\r\n p {\r\n    margin: 0;\r\n    margin-top: 0.6em;\r\n }\r\n</style>\r\n\r\n<div>\r\n    <p>{$currentPhoto.mediaMetadata !== undefined ? getPhotoDate($currentPhoto.mediaMetadata.creationTime) : ''}</p>\r\n    \r\n    <p>{($userProfile.name === undefined) ? '' : `Google Photos • ${$userProfile.name}`}</p>\r\n</div>","<script>\r\n\timport { onMount } from 'svelte';\r\n    import { config } from  './config.js';\r\n    import { jFetch, scheduleFunction } from  './jinFunctions.js';\r\n    \r\n    const WEATHERINFO_INTERVAL = 60 * 10;\r\n    let weather = {\r\n        'country': '',\r\n        'temp': 0,\r\n    };\r\n\r\n    let userCoordinates = {};\r\n    const getLocation = () => {\r\n        const options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n\r\n        function success(pos) {\r\n            const {coords} = pos;\r\n            const {latitude, longitude, accuracy} = coords;\r\n            console.log('Your current position is:', {latitude, longitude, accuracy: `${accuracy}m`});\r\n        }\r\n\r\n        function error(err) {\r\n            console.warn(`ERROR(${err.code}): ${err.message}`);\r\n        }\r\n\r\n        return new Promise((success, error, options) => {\r\n            navigator.geolocation.getCurrentPosition(success, error, options);\r\n        }).catch(error => false);\r\n    }\r\n\r\n    const getWeatherIcon = (weatherDescription) => {\r\n        const workingInput = weatherDescription.toLowerCase();\r\n\r\n        const testConditions = {\r\n            'partly cloudy night': 'partly_cloudy_night',\r\n            'partly cloudy': 'partly_cloudy',\r\n            'shower night': 'scattered_showers_night',\r\n            'shower': 'scattered_showers_day',\r\n            'partly cloudy night': 'partly_cloudy_night',\r\n            'partly cloudy': 'partly_cloudy',\r\n            'cloudy night': 'mostly_cloudy_night',\r\n            'cloudy': 'mostly_cloudy_day',\r\n            'mostly sunny': 'mostly_sunny',\r\n            'sunny': 'sunny_',\r\n            'mostly clear night': 'mostly_clear_night',\r\n            'clear night': 'clear_night',\r\n            'isolated thunderstorm night': 'isolated_scattered_tstorms_night',\r\n            'isolated thunderstorm': 'isolated_scattered_tstorms_day',\r\n            'thunderstorm': 'strong_tstorms',\r\n            'heavy rain': 'heavy_rain',\r\n            'rain': 'showers_rain',\r\n            'shower night': 'scattered_showers_night',\r\n            'shower ': 'scattered_showers_day',\r\n        };\r\n\r\n        return Object.entries(testConditions).reduce( (acc, [keyWords, weatherIconPrefix]) => {\r\n            if (acc === false) {\r\n                const matched = keyWords.split(' ').every( word => workingInput.includes(word) );\r\n\r\n                acc = matched ? `weather/${weatherIconPrefix}_light_color_96dp.png` : false;\r\n            }\r\n            return acc;\r\n        }, false)\r\n    }\r\n\r\n    const schedule_getWeatherData = (scheduleSeconds = WEATHERINFO_INTERVAL) => scheduleFunction('getWeatherData', getWeatherData, scheduleSeconds);\r\n    const getWeatherData = async (cords = userCoordinates) => {\r\n        const {latitude, longitude, accuracy} = cords;\r\n        const weatherService = {\r\n            'default': {\r\n                'current': `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${config.OPENWEATHERMAP_API_KEY}`,\r\n                'forecast': `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${config.OPENWEATHERMAP_API_KEY}`,\r\n            },\r\n            'singapore': {\r\n                'current': `https://api.data.gov.sg/v1/environment/air-temperature`,\r\n                'forecast': `https://api.data.gov.sg/v1/environment/2-hour-weather-forecast`,\r\n            },\r\n        }\r\n\r\n        const weather_owm = async () => {\r\n            const current = jFetch(weatherService.default.current);\r\n            const forecast = jFetch(weatherService.default.forecast);\r\n\r\n            const weatherPromises = await Promise.all([current, forecast]).then(function(values) {\r\n                const current = values[0];\r\n                const forecast = values[1];\r\n                console.log('weather_owm - raw values:', {current, forecast});\r\n\r\n                const weatherData = {\r\n                    'name': current.name,\r\n                    'country': current.sys.country,\r\n                    'temp': current.main.temp / 10,\r\n                    'weather': current.weather[0].main,\r\n                    'forecast': forecast.list[0].weather[0].main,\r\n                };\r\n\r\n                console.log('weather_owm - processed:', {weatherData});\r\n                return weatherData;\r\n            });\r\n\r\n            return weatherPromises;\r\n        }\r\n\r\n        const weather_sg = async () => {\r\n            const current = jFetch(weatherService.singapore.current);\r\n            const forecast = jFetch(weatherService.singapore.forecast);\r\n\r\n            const weatherPromises = await Promise.all([current, forecast]).then(function(values) {\r\n                const current = values[0];\r\n                const forecast = values[1];\r\n                console.log('weather_sg - raw values:', {current, forecast});\r\n\r\n                // FIND CLOSEST STATION using coordinates\r\n                // for now, just assume Woodlands\r\n\r\n                const current_closest_station_index = current.metadata.stations.reduce( (acc, item, idx) => {\r\n                    if (acc === false) {\r\n                        acc = (item.name.toLowerCase().includes('woodlands')) ? idx : false;\r\n                    }\r\n                    return acc;\r\n                }, false);\r\n                \r\n                const forecast_closest_area_index = forecast.area_metadata.reduce( (acc, item, idx) => {\r\n                    if (acc === false) {\r\n                        acc = (item.name.toLowerCase().includes('woodlands')) ? idx : false;\r\n                    }\r\n                    return acc;\r\n                }, false);\r\n\r\n                const current_closest = current.items[0].readings[current_closest_station_index];\r\n                const forecast_closest = forecast.items[0].forecasts[forecast_closest_area_index];\r\n\r\n                console.log('weather_sg - finding closest match:', {current_closest_station_index, current_closest, forecast_closest_area_index, forecast_closest});\r\n\r\n                const weatherData = {\r\n                    'name': forecast_closest.area,\r\n                    'country': 'SG',\r\n                    'temp': current_closest.value,\r\n                    'weather': forecast_closest.forecast,\r\n                    'forecast': forecast_closest.forecast,\r\n                };\r\n\r\n                console.log('weather_sg - processed:', {weatherData});\r\n                return weatherData;\r\n            });\r\n\r\n            return weatherPromises;\r\n        }\r\n\r\n        let weatherData = {};\r\n        if (weather.country === 'SG') {\r\n            weatherData = await weather_sg();\r\n        } else {\r\n            weatherData = await weather_owm();\r\n            if (weatherData.country === 'SG') {\r\n                console.log('Singapore detected! Changing to Singapore api...')\r\n                weatherData = await weather_sg();\r\n            }\r\n        }\r\n\r\n        // add icon\r\n        weatherData['forecastIcon'] = getWeatherIcon(weatherData.forecast);\r\n\r\n        schedule_getWeatherData();\r\n\r\n        weather = weatherData;\r\n        return weatherData;\r\n    }\r\n    \r\n    \r\n    onMount(() => {\r\n        if (window.location.search === '?locationWoodlands') {\r\n            console.log('Overwriting user location to Woodlands, Singapore...')\r\n            userCoordinates = {\r\n                'accuracy': 20,\r\n                'latitude': 1.4310824,\r\n                'longitude': 103.77629639999999,\r\n            }\r\n            getWeatherData();\r\n        } else {\r\n            getLocation().then( async (data) => {\r\n                const {coords} = data;\r\n                userCoordinates = coords;\r\n                console.log({coords});\r\n                \r\n                getWeatherData();\r\n            });\r\n        }\r\n    });\r\n</script>\r\n\r\n\r\n<style>\r\ndiv {\r\n    font-size: 2.75rem;\r\n    line-height: 1em;\r\n    margin-left: 1.5rem;\r\n    margin-right: 2rem;\r\n    text-shadow: 1px 1px 2px black;\r\n}\r\n\r\nimg.weatherIcon {\r\n    height: 1em;\r\n    width: auto;\r\n    margin-bottom: -0.15em;\r\n}\r\n</style>\r\n\r\n<div>\r\n    {#if weather.forecastIcon}\r\n        <img class=\"weatherIcon\" src={weather.forecastIcon} alt={weather.forecast} />\r\n    {/if}\r\n    {isNaN(weather.temp) ? '' : `${Math.round(weather.temp)}°`}\r\n</div>","<script>\r\n\timport { onMount } from 'svelte';\r\n    import Clock from './Clock.svelte';\r\n    import PhotoSlogan from './PhotoSlogan.svelte';\r\n\timport WeatherWidget from './WeatherWidget.svelte';\r\n    import { timeStringFormatter, dateStringFormatter } from  './jinFunctions.js';\r\n    \r\n\tlet time = new Date();\r\n\r\n\tonMount(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\ttime = new Date();\r\n        }, 1000);\r\n    });\r\n\r\n    $: timeString = timeStringFormatter(time);\r\n    $: dateString = dateStringFormatter(time, 'dayMonth');\r\n</script>\r\n\r\n<style>\r\ndiv {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    margin-bottom: 2rem;\r\n    color: white;\r\n    width: 100%;\r\n    line-height: 1em;\r\n    text-shadow: 1px 1px 8px black;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    flex-direction: row;\r\n}\r\n</style>\r\n\r\n<div>\r\n    <Clock {timeString} />\r\n    <WeatherWidget />\r\n    <PhotoSlogan photoSlogan={dateString} />\r\n</div>","<script>\n\timport { photos } from './stores.js';\n\timport PhotoBackground from './PhotoBackground.svelte';\n\timport BottomBar from './BottomBar.svelte';\n\n\texport let name;\n\texport let version;\n\n\tconsole.log(`Starting ${name} v${version}...`);\n\t\n\texport let db;\n\tdb = new Dexie(\"fotoDatabase\");\n\tdb.version(1).stores({photos: 'id'});\n\tdb.version(2).stores({photos: 'id, modified'});\n</script>\n\n\n<!-- <h1>Welcome to {name}!</h1> -->\t\n\n<PhotoBackground {db}/>\n<BottomBar />\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'Foto',\n\t\tversion: `0.3`,\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","component","store","callback","unsub","$$","on_destroy","push","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","set_data","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","mount_component","m","new_on_destroy","map","filter","make_dirty","key","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","callbacks","ready","value","hydrate","l","Array","from","childNodes","c","intro","i","SvelteComponent","[object Object]","detaching","this","d","$destroy","type","index","indexOf","splice","writable","start","stop","subscribers","set","new_value","s","invalidate","subscriber","userProfile","currentPhoto","config","API_KEY","CLIENT_ID","OPENWEATHERMAP_API_KEY","async","jFetch","url","fetch","response","ok","statusText","console","log","json","catch","error","timeouts","scheduleFunction","functionName","functionObj","scheduleSeconds","desiredItem","desiredCommand","desiredCommandParameter","commands","schedule","clearInterval","setTimeout","function","timeout","keys","includes","timeoutHandler","timeStringFormatter","timeObj","hoursFormatted","getHours","getMinutes","toString","padStart","dateStringFormatter","outputFormat","dateStrings","toDateString","split","days","days_short","item","substr","day","month","date","parseInt","year","output","googlePhotosClientLoaded","SLIDESHOW_INTERVAL","GETNEWPHOTOS_INTERVAL","db","getUserProfile","authInstance","gapi","auth2","getAuthInstance","isSignedIn","get","profile","currentUser","getBasicProfile","getName","image","getImageUrl","loadClient","client","setApiKey","load","newlyUpdatedPhotos","photos","orderBy","reverse","limit","toArray","averageModifiedTime","reduce","accumulator","modified","inactiveTolerance","thresholdTime","deleteTransaction","where","below","delete","clearOldPhotos","schedule_displayRandomPhoto","schedule_getPictures","err","displayRandomPhoto","totalNoOfPhotos","count","randomPhotoIndex","Math","round","random","randomPhotoItem","offset","first","randomPhotoId","id","photoslibrary","mediaItems","mediaItemId","result","imgUrl","img","Image","onload","querySelector","style","backgroundImage","src","changeBackgroundImage","$currentPhoto","baseUrl","pageToken","getPictures","search","resource","pageSize","newPhotoIds","mimeType","filename","toLowerCase","every","nowTime","Date","getTime","bulkPut","nextPageToken","client_id","signIn","scope","timeString","undefined","mediaMetadata","getPhotoDate","creationTime","$userProfile","photoSlogan","weather","forecastIcon","forecast","isNaN","temp","country","userCoordinates","getWeatherData","cords","latitude","longitude","accuracy","weatherService","default","current","singapore","weather_sg","all","values","current_closest_station_index","metadata","stations","acc","idx","forecast_closest_area_index","area_metadata","current_closest","items","readings","forecast_closest","forecasts","weatherData","area","sys","main","list","weather_owm","weatherDescription","workingInput","entries","partly cloudy night","partly cloudy","shower night","shower","cloudy night","cloudy","mostly sunny","sunny","mostly clear night","clear night","isolated thunderstorm night","isolated thunderstorm","thunderstorm","heavy rain","rain","shower ","keyWords","weatherIconPrefix","word","getWeatherIcon","schedule_getWeatherData","window","location","success","navigator","geolocation","getCurrentPosition","getLocation","coords","dateString","time","setInterval","version","Dexie","stores","body"],"mappings":"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"}